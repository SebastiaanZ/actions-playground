name: Core Developer Requirement

on:
  pull_request_review:
    types: [submitted, dismissed]
  pull_request_target:

jobs:
  review-check:
    name:  At least one core developer needs to approve this PR
    runs-on: ubuntu-latest

    steps:
      - uses: octokit/graphql-action@v2.x
        id: reviews
        with:
          query: |
            query ($repository: String!, $pr: Int!) {
              repository(owner: "python-discord", name: $repository) {
                pullRequest(number: $pr) {
                  latestOpinionatedReviews(last: 100, writersOnly: true) {
                    nodes{
                      author{
                        login
                      }
                      state
                    }
                  }
                }
              }
            }
          repository: bot
          pr: 1202
#          repository: ${{ github.event.repository.name }}
#          pr: ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}

      - uses: octokit/graphql-action@v2.x
        id: core_developers
        with:
          query: |
            query {
              organization(login: "python-discord") {
                team(slug: "core-developers") {
                  members(first: 100) {
                    nodes {
                      login
                    }
                  }
                }
              }
            }
        env:
          GITHUB_TOKEN: ${{ secrets.TEAM_TOKEN }}

      - name: Setup python
        id: python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Check for Accepting Core Developers
        id: core_dev_reviews
        run: |
          python -c 'import json
          reviews = json.loads("""${{ steps.reviews.outputs.data }}""")
          reviewers = {
              review["author"]["login"]
              for review in reviews["repository"]["pullRequest"]["latestOpinionatedReviews"]["nodes"]
              if review["state"] == "APPROVED"
          }
          core_devs = json.loads("""${{ steps.core_developers.outputs.data }}""")
          core_devs = {
              member["login"] for member in core_devs["organization"]["team"]["members"]["nodes"]
          }
          approving_core_devs = reviewers & core_devs
          approved = "true" if approving_core_devs else "false"
          print(f"::set-output name=approved::{approved}")
          '

      - name: Fail workflow if no Core Developers have approved this PR
        if: steps.core_dev_reviews.outputs.approved == 'false'
        run: exit 1
